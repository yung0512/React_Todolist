{"version":3,"sources":["hooks/useLocalStorageState.js","hooks/useToggleState.js","hooks/useinputState.js","EditTodoForm.js","Todo.js","TodoList.js","TodoForm.js","TodoApp.js","hooks/useTodoState.js","App.js","reportWebVitals.js","index.js"],"names":["useLocalStorageState","key","defaultVal","useState","val","JSON","parse","window","localStorage","getItem","String","e","state","setState","useEffect","setItem","stringify","useToggle","initialVal","toggle","value","setValue","target","EditTodoForm","editTodo","id","task","toggleEditForm","useInputState","handleChange","reset","onSubmit","preventDefault","style","marginLeft","width","TextField","maring","onChange","fullWidth","autoFocus","Todo","completed","removeTodo","toggleTodo","useToggleState","isEditing","ListItem","height","Checkbox","checked","tabIndex","onClick","ListItemText","textDecoration","ListItemSecondaryAction","IconButton","aria-label","TodoList","todos","length","Paper","List","map","todo","i","Divider","TodoForm","addTodo","margin","padding","label","TodoApp","initialTodos","setTodos","newTodoText","uuid","todoId","updatedTodos","filter","newTask","useTodoState","backgroundColor","elevation","AppBar","color","position","Toolbar","Typography","Grid","container","justify","marginTop","item","xs","md","lg","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de6807cd.chunk.js","sourcesContent":["import {useState, useEffect} from \"react\" \n\nfunction useLocalStorageState(key, defaultVal){\n    //make piece of state ,based off of value in localstorge\n    const[state, setState] =  useState(()=>{\n        let val;\n        try {\n            val = JSON.parse(window.localStorage.getItem(key) || String(defaultVal))\n        }\n        catch(e){\n            val = defaultVal\n        }\n        return val\n    });\n    useEffect(() => {\n        window.localStorage.setItem(key, JSON.stringify(state));\n    },[state])\n    return [state, setState]\n}\n\nexport default useLocalStorageState","import {useState} from 'react'\nfunction useToggle(initialVal = false) {\n    const [state, setState] = useState(initialVal)\n    const toggle = () => {\n        setState(!state);\n    }\n    return[state,toggle]\n}\nexport default useToggle;","import { useState} from \"react\"\nexport default initialVal => {\n    const [value,setValue] = useState(initialVal);\n    const handleChange = e => {\n        setValue(e.target.value);\n    };\n    const reset = ()=>{\n        setValue(\"\")\n    }\n    return [value , handleChange ,reset]\n}\n","import React from \"react\"\nimport TextField from \"@material-ui/core/TextField\"\nimport useInputState from \"./hooks/useinputState\"\n\nfunction EditTodoForm ({editTodo,id,task,toggleEditForm}){\n    const [value, handleChange, reset] = useInputState(task)\n    return(\n        <form onSubmit={e => {\n            e.preventDefault();\n            editTodo(id,value)\n            reset();\n            toggleEditForm();\n        }}\n            style={{marginLeft:\"1rem\",width:\"50%\"}}\n        >\n            <TextField \n                maring=\"normal\"\n                value={value} \n                onChange={handleChange} \n                fullWidth\n                autoFocus\n            />\n        </form>\n    )\n}\nexport default EditTodoForm","import React from \"react\"\nimport useToggleState from \"./hooks/useToggleState\"\nimport EditTodoForm from \"./EditTodoForm\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport EditIcon from \"@material-ui/icons/Edit\"\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\"\n\nfunction Todo({task,completed,removeTodo,id,toggleTodo,editTodo}){\n    const [isEditing,toggle] = useToggleState(false);\n    return(\n        <ListItem style={{height:\"64px\"}}>\n            {isEditing ? <EditTodoForm id={id} editTodo={editTodo} task={task} toggleEditForm={toggle}/>:\n                <>\n                <Checkbox checked={completed} tabIndex={-1} onClick={()=>toggleTodo(id)}/>\n                <ListItemText style={{textDecoration:completed?\"line-through\":\"none\"}}>\n                {task}\n                </ListItemText>\n                <ListItemSecondaryAction>\n                    <IconButton aria-label=\"Delete\" onClick={()=>removeTodo(id)}>\n                        <DeleteIcon/>\n                    </IconButton>\n                    <IconButton aria-label=\"Edit\" onClick={toggle}>\n                        <EditIcon/>\n                    </IconButton>\n                </ListItemSecondaryAction>\n                </>\n            }   \n        </ListItem>\n    );\n            \n}\nexport default Todo;","import React from \"react\"\nimport Paper from \"@material-ui/core/Paper\"\nimport List from \"@material-ui/core/List\"\nimport Divider from \"@material-ui/core/Divider\"\nimport Todo from './Todo'\nfunction TodoList({todos,removeTodo,toggleTodo,editTodo}){\n    if(todos.length){\n    return(\n        <Paper>\n            <List>\n            {todos.map((todo,i)=>(\n                <>\n                    <Todo \n                        {...todo}\n                        editTodo={editTodo}\n                        toggleTodo={toggleTodo}\n                        removeTodo={removeTodo}   \n                        key={todo.id} \n                    />\n                    {i < todos.length-1 && <Divider/>}\n                </>\n            ))}\n            </List>\n        </Paper>\n        )\n    }\n    return null;\n}\nexport default TodoList","import React from \"react\"\nimport Paper from '@material-ui/core/Paper'\nimport { TextField } from \"@material-ui/core\"\nimport useInputState from \"./hooks/useinputState\"\n\nfunction TodoForm ({addTodo}){\n    const [value,handleChange,reset] = useInputState(\"\")\n    return(\n        <Paper \n            style={{margin:\"1rem 0\",padding:\"0 1rem\"}}\n        >\n            <form \n                onSubmit={e =>{\n                e.preventDefault()\n                addTodo(value);\n                reset()\n            }}>\n                <TextField \n                    value={value}\n                    margin='normal'\n                    label=\"Add New Todo\"\n                    onChange={handleChange}\n                    fullWidth\n                />\n            </form>\n        </Paper>\n    )\n}\nexport default TodoForm;\n//use input hook (hook is reuseble,that is,every input can call the input hook with giving defferent hook name)","import React ,{useEffect}from 'react'\nimport useTodoState from './hooks/useTodoState'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport AppBar from '@material-ui/core/AppBar'\nimport TodoList from './TodoList'\nimport TodoForm from './TodoForm'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Grid from '@material-ui/core/Grid'\nfunction TodoApp(){\n    const initialTodos = [{ id: 1, task: \"Pet a Monkey\", completed: false}]\n    const{todos,addTodo,removeTodo,toggleTodo,editTodo} = useTodoState(initialTodos)\n    \n    useEffect(()=>{\n        window.localStorage.setItem(\"todos\",JSON.stringify(todos),[todos])\n    })//useEffect is triggerd when the todoapp is rerender ,use second argument to specify useeffect track which state\n    return (\n        <Paper\n            style={{\n                padding:0,\n                margin:0,\n                height:\"100vh\",\n                backgroundColor:\"#fafafa\"\n            }}\n            elevation={0}\n        >\n            <AppBar color='primary' position='static' style={{height:\"64px\"}}>\n                <Toolbar>\n                    <Typography color='inherit'>\n                        TODOS WITH HOOKS\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Grid container justify=\"center\" style={{marginTop:\"1rem\"}}>\n                <Grid item xs={11} md={8} lg={4}>\n                    <TodoForm addTodo={addTodo}/>\n                    <TodoList\n                        editTodo={editTodo} \n                        todos={todos} \n                        removeTodo={removeTodo}\n                        toggleTodo={toggleTodo}\n                    />\n                </Grid>\n            </Grid>\n        </Paper>\n    )\n}\nexport default TodoApp;","import useLocalStorageState from \"./useLocalStorageState\"\nimport uuid from 'uuid/dist/v4'\n\nexport default initialTodos => {\n    const [todos, setTodos] = useLocalStorageState(\"todos\",initialTodos)\n    return {\n        todos,\n        addTodo:newTodoText => {\n            setTodos([...todos,{id:uuid(),task:newTodoText,completed:false}])\n        },\n        removeTodo: todoId =>{\n            const updatedTodos = todos.filter( todo=> todo.id !== todoId);\n        setTodos(updatedTodos)},\n        toggleTodo:todoId => {\n            const updatedTodos = todos.map(todo => todo.id===todoId?{...todo,completed:!todo.completed}:todo)\n            setTodos(updatedTodos)\n        },\n        editTodo:(todoId,newTask) => {\n            const updatedTodos = todos.map(todo => todo.id===todoId?{...todo,task:newTask}:todo)\n            setTodos(updatedTodos)\n        }\n    }\n}","import './App.css';\nimport TodoApp from './TodoApp'\nfunction App() {\n  return (\n      <TodoApp />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}