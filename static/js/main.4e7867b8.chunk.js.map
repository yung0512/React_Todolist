{"version":3,"sources":["TodoList.js","TodoForm.js","hooks/useinputState.js","TodoApp.js","App.js","reportWebVitals.js","index.js"],"names":["TodoList","props","Paper","List","todos","map","todo","ListItem","ListItemText","task","Divider","TodoForm","addTodo","initialVal","useState","value","setValue","e","target","useInputState","handleChange","reset","onSubmit","preventDefault","TextField","onChange","TodoApp","id","completed","setTodos","style","padding","margin","height","backgroundColor","elevation","AppBar","color","position","Toolbar","Typography","newTodoText","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wSAsBeA,MAhBf,SAAkBC,GACd,OACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACCF,EAAMG,MAAMC,KAAI,SAAAC,GAAI,OACjB,qCACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UAAeF,EAAKG,SAExB,cAACC,EAAA,EAAD,e,SCKLC,MAff,YAA8B,IAAVC,EAAS,EAATA,QAAS,ECJd,SAAAC,GAAe,IAAD,EACAC,mBAASD,GADT,mBAClBE,EADkB,KACZC,EADY,KAQzB,MAAO,CAACD,EANa,SAAAE,GACjBD,EAASC,EAAEC,OAAOH,QAER,WACVC,EAAS,MDDsBG,CAAc,IADxB,mBAClBJ,EADkB,KACZK,EADY,KACCC,EADD,KAEzB,OACI,cAACnB,EAAA,EAAD,UACI,sBACIoB,SAAU,SAAAL,GACVA,EAAEM,iBACFX,EAAQG,GACRM,KAJJ,SAMI,cAACG,EAAA,EAAD,CAAWT,MAAOA,EAAOU,SAAUL,S,SEyBpCM,MAhCf,WACI,IADc,EAMYZ,mBALL,CACjB,CAACa,GAAG,EAAElB,KAAK,iBAAiBmB,WAAU,GACtC,CAACD,GAAG,EAAElB,KAAK,gBAAgBmB,WAAU,GACrC,CAACD,GAAG,EAAElB,KAAK,YAAYmB,WAAU,KAJvB,mBAMPxB,EANO,KAMAyB,EANA,KAUd,OACI,eAAC3B,EAAA,EAAD,CACI4B,MAAO,CACHC,QAAQ,EACRC,OAAO,EACPC,OAAO,QACPC,gBAAgB,WAEpBC,UAAW,EAPf,UASI,cAACC,EAAA,EAAD,CAAQC,MAAM,UAAUC,SAAS,SAASR,MAAO,CAACG,OAAO,QAAzD,SACI,cAACM,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAYH,MAAM,UAAlB,kCAKR,cAAC,EAAD,CAAUzB,QApBF,SAAA6B,GACZZ,EAAS,GAAD,mBAAKzB,GAAL,CAAW,CAACuB,GAAG,EAAElB,KAAKgC,EAAYb,WAAU,SAoB5C,cAAC,EAAD,CAAUxB,MAAOA,QC5BlBsC,MANf,WACE,OACI,cAAC,EAAD,KCQSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4e7867b8.chunk.js","sourcesContent":["import React from \"react\"\nimport Paper from \"@material-ui/core/Paper\"\nimport List from \"@material-ui/core/List\"\nimport Divider from \"@material-ui/core/Divider\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nfunction TodoList(props){\n    return(\n        <Paper>\n            <List>\n            {props.todos.map(todo=>(\n                <>\n                    <ListItem>\n                        <ListItemText>{todo.task}</ListItemText>\n                    </ListItem>\n                    <Divider/>\n                </>\n            ))}\n            </List>\n        </Paper>\n    )\n}\nexport default TodoList","import React from \"react\"\nimport Paper from '@material-ui/core/Paper'\nimport { TextField } from \"@material-ui/core\"\nimport useInputState from \"./hooks/useinputState\"\n\nfunction TodoForm ({addTodo}){\n    const [value,handleChange,reset] = useInputState(\"\")\n    return(\n        <Paper>\n            <form \n                onSubmit={e =>{\n                e.preventDefault()\n                addTodo(value);\n                reset()\n            }}>\n                <TextField value={value} onChange={handleChange}/>\n            </form>\n        </Paper>\n    )\n}\nexport default TodoForm;\n//use input hook (hook is reuseble,that is,every input can call the input hook with giving defferent hook name)","import { useState} from \"react\"\nexport default initialVal => {\n    const [value,setValue] = useState(initialVal);\n    const handleChange = e => {\n        setValue(e.target.value);\n    };\n    const reset = ()=>{\n        setValue(\"\")\n    }\n    return [value , handleChange ,reset]\n}\n","import React ,{useState}from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport AppBar from '@material-ui/core/AppBar'\nimport TodoList from './TodoList'\nimport TodoForm from './TodoForm'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Grid from '@material-ui/core/Grid'\nfunction TodoApp(){\n    const initialTodos = [\n        {id:1,task:\"Clean Fishtank\",completed:false},\n        {id:2,task:\"jogging 3000m\",completed:false},\n        {id:3,task:\"feed cats\",completed:false}\n    ]\n    const [todos, setTodos] = useState(initialTodos)\n    const addTodo = newTodoText => {\n        setTodos([...todos,{id:4,task:newTodoText,completed:false}])\n    }\n    return (\n        <Paper\n            style={{\n                padding:0,\n                margin:0,\n                height:\"100vh\",\n                backgroundColor:\"#fafafa\"\n            }}\n            elevation={0}\n        >\n            <AppBar color='primary' position='static' style={{height:\"64px\"}}>\n                <Toolbar>\n                    <Typography color='inherit'>\n                        TODOS WITH HOOKS\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <TodoForm addTodo={addTodo}/>\n                <TodoList todos={todos}/>\n        </Paper>\n    )\n}\nexport default TodoApp;","import './App.css';\nimport TodoApp from './TodoApp'\nfunction App() {\n  return (\n      <TodoApp />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}